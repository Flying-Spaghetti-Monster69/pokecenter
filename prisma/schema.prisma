generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model cita {
  id         Int      @id(map: "Cita_pkey") @default(autoincrement())
  current_PV Int
  PV         Int
  statuses   String[]
  level      Int
  pokedex_ID Int
  species    String
  name       String
  created_At DateTime @default(now())
  updated_At DateTime @updatedAt
  userId     String
  state_cita String   @default("espera")
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Cita_userId_fkey")
}

model User {
  id            String    @id
  name          String
  email         String    @unique
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  banExpires    DateTime?
  banReason     String?
  banned        Boolean?
  role          String    @default("user")
  accounts      Account[]
  citas         cita[]
  sessions      Session[]

  @@map("user")
}

model Session {
  id             String   @id
  expiresAt      DateTime
  token          String   @unique
  createdAt      DateTime
  updatedAt      DateTime
  ipAddress      String?
  userAgent      String?
  userId         String
  impersonatedBy String?
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

enum status {
  envenenado
  quemado
  congelado
  paralisado
  dormido
}
