// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum status {
  envenenado
  quemado
  congelado
  paralisado
  dormido
}

enum roles {
  indefinido
  enfermera
  entrenador
  admin
}


model Cita {
  id          Int          @id @default(autoincrement())
  current_PV Int 
  PV Int
  statuses    status[]
  level       Int
  pokedex_ID   Int
  species  String
  name  String
  created_At DateTime @default(now())
  updated_At DateTime @updatedAt
  userId      String
  user        User @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          roles     @default(indefinido)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  citas       Cita[]
}

// This model is used for OAuth accounts and sessions. Is just a default model from NextAuth.js and Prisma. do not change it.
// https://next-auth.js.org/adapters/prisma
// https://www.prisma.io/docs/concepts/components/prisma-schema/data-model#model

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}